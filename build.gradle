plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.wemap'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    //mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    //security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    //web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    //websocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    //kafka
    implementation 'org.springframework.kafka:spring-kafka'
    //modelmapper
    implementation 'org.modelmapper:modelmapper:3.0.0'
    //jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    //devtools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    //postgresql
    runtimeOnly 'org.postgresql:postgresql'
    //querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    //test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

def querydslSrcDir = "src/main/generated"

clean {
    delete file(querydslSrcDir)
}

ext.profile = (!project.hasProperty('profile') || !profile) ? 'local' : profile

sourceSets {
    main{
        resources {
            srcDirs "src/main/resources/resources-${profile}"
            exclude "resources-*"
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
